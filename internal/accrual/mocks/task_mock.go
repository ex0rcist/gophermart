// Code generated by MockGen. DO NOT EDIT.
// Source: internal/accrual/task.go
//
// Generated by this command:
//
//      mockgen -source=internal/accrual/task.go
//

// Package mock_accrual is a generated GoMock package.
package mock_accrual

import (
        reflect "reflect"

        gomock "go.uber.org/mock/gomock"
)

// MockITask is a mock of ITask interface.
type MockITask struct {
        ctrl     *gomock.Controller
        recorder *MockITaskMockRecorder
}

// MockITaskMockRecorder is the mock recorder for MockITask.
type MockITaskMockRecorder struct {
        mock *MockITask
}

// NewMockITask creates a new mock instance.
func NewMockITask(ctrl *gomock.Controller) *MockITask {
        mock := &MockITask{ctrl: ctrl}
        mock.recorder = &MockITaskMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITask) EXPECT() *MockITaskMockRecorder {
        return m.recorder
}

// Handle mocks base method.
func (m *MockITask) Handle() error {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "Handle")
        ret0, _ := ret[0].(error)
        return ret0
}

// Handle indicates an expected call of Handle.
func (mr *MockITaskMockRecorder) Handle() *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockITask)(nil).Handle))
}