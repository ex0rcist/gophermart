// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/repository/withdrawal.go
//
// Generated by this command:
//
//      mockgen -source=internal/storage/repository/withdrawal.go
//

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
        context "context"
        reflect "reflect"

        domain "github.com/ex0rcist/gophermart/internal/domain"
        pgx "github.com/jackc/pgx/v5"
        gomock "go.uber.org/mock/gomock"
)

// MockIWithdrawalRepository is a mock of IWithdrawalRepository interface.
type MockIWithdrawalRepository struct {
        ctrl     *gomock.Controller
        recorder *MockIWithdrawalRepositoryMockRecorder
}

// MockIWithdrawalRepositoryMockRecorder is the mock recorder for MockIWithdrawalRepository.
type MockIWithdrawalRepositoryMockRecorder struct {
        mock *MockIWithdrawalRepository
}

// NewMockIWithdrawalRepository creates a new mock instance.
func NewMockIWithdrawalRepository(ctrl *gomock.Controller) *MockIWithdrawalRepository {
        mock := &MockIWithdrawalRepository{ctrl: ctrl}
        mock.recorder = &MockIWithdrawalRepositoryMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWithdrawalRepository) EXPECT() *MockIWithdrawalRepositoryMockRecorder {
        return m.recorder
}

// WithdrawalCreate mocks base method.
func (m *MockIWithdrawalRepository) WithdrawalCreate(ctx context.Context, tx pgx.Tx, w domain.Withdrawal) error {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "WithdrawalCreate", ctx, tx, w)
        ret0, _ := ret[0].(error)
        return ret0
}

// WithdrawalCreate indicates an expected call of WithdrawalCreate.
func (mr *MockIWithdrawalRepositoryMockRecorder) WithdrawalCreate(ctx, tx, w any) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithdrawalCreate", reflect.TypeOf((*MockIWithdrawalRepository)(nil).WithdrawalCreate), ctx, tx, w)
}

// WithdrawalList mocks base method.
func (m *MockIWithdrawalRepository) WithdrawalList(ctx context.Context, userID domain.UserID) ([]*domain.Withdrawal, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "WithdrawalList", ctx, userID)
        ret0, _ := ret[0].([]*domain.Withdrawal)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// WithdrawalList indicates an expected call of WithdrawalList.
func (mr *MockIWithdrawalRepositoryMockRecorder) WithdrawalList(ctx, userID any) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithdrawalList", reflect.TypeOf((*MockIWithdrawalRepository)(nil).WithdrawalList), ctx, userID)
}